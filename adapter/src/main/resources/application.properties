# ===============================
# = SPRING CONFIG
# ===============================
spring.config.import=file:env.properties
# ===============================
# = SPRING CONFIG
# ===============================
server.port=8088
# ===============================
# = POSTGRESQL
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://${postgresql.server.address}:${postgresql.server.port}/${postgresql.database.name}
spring.datasource.username=${postgresql.credentials.username}
spring.datasource.password=${postgresql.credentials.password}
spring.datasource.driver-class-name=org.postgresql.Driver
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
# ===============================
# = SWAGGER
# ===============================
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER
# ===============================
# = SPRING KAFKA
# ===============================
spring.kafka.server.address=${my-blog.kafka.server.url}:${my-blog.kafka.server.port}
spring.kafka.server.group.id=${my-blog.kafka.server.group.id}
# ===============================
# = KAFKA TOPIC
# ===============================
my-blog.kafka.topics.notifications.mail.create-user=cedricakrou.my-blog.notifications.mail.create-user-topic
# ===============================
# = JWT PROPERTIES
# ===============================
cedricakrou.my-blog.jwt.secret-key=${my-blog.jwt.secret-key}
cedricakrou.my-blog.jwt.expiration-duration=${my-blog.jwt.token.duration}